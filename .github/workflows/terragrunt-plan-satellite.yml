name: "Terragrunt plan satellite"

on:
  workflow_dispatch:
  pull_request:
    paths:
      - ".github/workflows/terragrunt-plan-satellite.yml"
      - "satellite_accounts"
      - "terragrunt/aws/alarms/**"
      - "terragrunt/aws/config/**"
      - "terragrunt/aws/satellite_bucket/**"
      - "terragrunt/env/common/**"
      - "terragrunt/env/satellite/**"
      - "terragrunt/env/terragrunt.hcl"

env:
  AWS_REGION: ca-central-1
  CONFTEST_VERSION: 0.27.0
  TERRAFORM_VERSION: 1.1.4
  TERRAGRUNT_VERSION: 0.36.0
  TF_INPUT: false
  TF_VAR_slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_CBS }}

permissions:
  id-token: write
  contents: read
  pull-requests: write
  actions: write
  checks: write
  statuses: write

jobs:
  retrieve-accounts:
    uses: cds-snc/cloud-based-sensor/.github/workflows/retrieve-accounts.yml@main

  terragrunt-plan:
    needs: retrieve-accounts
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.retrieve-accounts.outputs.matrix)}}

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@3d8debd658c92063839bc97da5c2427100420dec # v1.3.2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
          terraform_wrapper: false

      - name: Setup Terragrunt
        run: |
          mkdir bin
          wget -O bin/terragrunt https://github.com/gruntwork-io/terragrunt/releases/download/v$TERRAGRUNT_VERSION/terragrunt_linux_amd64
          chmod +x bin/*
          echo "$GITHUB_WORKSPACE/bin" >> $GITHUB_PATH

      - name: Install Conftest
        run: |
          wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" \
          && wget "https://github.com/open-policy-agent/conftest/releases/download/v${{ env.CONFTEST_VERSION }}/checksums.txt" \
          && grep 'Linux_x86_64.tar.gz' < checksums.txt | sha256sum --check  --status \
          && tar -zxvf "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" conftest \
          && mv conftest /usr/local/bin \
          && rm "conftest_${{ env.CONFTEST_VERSION }}_Linux_x86_64.tar.gz" checksums.txt

      - uses: cds-snc/paths-filter@v2.10.3
        id: filter
        with:
          filters: |
            alarms:
              - 'terragrunt/aws/alarms/**'
              - 'terragrunt/env/satellite/alarms/**'          
            config:
              - 'terragrunt/aws/config/**'
              - 'terragrunt/env/satellite/config/**'
            satellite_bucket:
              - 'terragrunt/aws/satellite_bucket/**'
              - 'terragrunt/env/satellite/satellite_bucket/**'
            common:
              - '.github/workflows/terragrunt-plan-satellite.yml'
              - 'satellite_accounts'
              - 'terragrunt/env/common/**'
              - 'terragrunt/env/terragrunt.hcl'

      - name: configure aws credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::871282759583:role/ConfigTerraformAdministratorRole
          role-session-name: CBSGitHubActions
          aws-region: "ca-central-1"

      - name: Set the Terragrunt IAM role
        run: |
          echo "TERRAGRUNT_IAM_ROLE=arn:aws:iam::${{ matrix.account }}:role/ConfigTerraformAdminExecutionRole" >> $GITHUB_ENV
          echo "TERRAGRUNT_IAM_ASSUME_ROLE_SESSION_NAME=CBSGitHubActions" >> $GITHUB_ENV

      - name: Terragrunt plan satellite bucket
        if: ${{ steps.filter.outputs.satellite_bucket == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v2
        with:
          directory: "terragrunt/env/satellite/satellite_bucket"
          comment-delete: "true"
          comment-title: "${{ matrix.account }}: Satellite bucket"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan config
        if: ${{ steps.filter.outputs.config == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v2
        with:
          directory: "terragrunt/env/satellite/config"
          comment-delete: "true"
          comment-title: "${{ matrix.account }}: ConfigRules"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"

      - name: Terragrunt plan alarms
        if: ${{ steps.filter.outputs.alarms == 'true' || steps.filter.outputs.common == 'true' }}
        uses: cds-snc/terraform-plan@v2
        with:
          directory: "terragrunt/env/satellite/alarms"
          comment-delete: "true"
          comment-title: "${{ matrix.account }}: Alarms"
          github-token: "${{ secrets.GITHUB_TOKEN }}"
          terragrunt: "true"
