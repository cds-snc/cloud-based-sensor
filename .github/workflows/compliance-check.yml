name: "Compliance check"

on:
  workflow_dispatch:

env:
  AWS_REGION: ca-central-1
  SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_CBS }}

permissions:
  id-token: write
  contents: read
  actions: write
  checks: write
  statuses: write

jobs:

  retrieve-accounts:
    uses: cds-snc/cloud-based-sensor/.github/workflows/retrieve-accounts.yml@main

  compliance-check:
    needs: retrieve-accounts
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.retrieve-accounts.outputs.matrix)}}

    runs-on: ubuntu-latest
    steps:

      - name: Configure AWS credentials using OIDC
        uses: aws-actions/configure-aws-credentials@master
        with:
          role-to-assume: arn:aws:iam::339850311124:role/ConfigTerraformAdministratorRole
          aws-region: ${{ env.AWS_REGION }}
          role-duration-seconds: 900

      - name: Check rule compliance
        id: compliance
        run: |
          # Assume satellite account role
          export $(printf "AWS_ACCESS_KEY_ID=%s AWS_SECRET_ACCESS_KEY=%s AWS_SESSION_TOKEN=%s" \
            $(aws sts assume-role \
              --role-arn arn:aws:iam::${{ matrix.account }}:role/ConfigTerraformAdminExecutionRole \
              --role-session-name SatelliteAccountSession \
              --duration-seconds 900 \
              --query "Credentials.[AccessKeyId,SecretAccessKey,SessionToken]" \
              --output text))

          RULE_STATUS=$(aws configservice describe-compliance-by-config-rule \
            --compliance-types NON_COMPLIANT \
            --config-rule-names \
              cbs_cloudtrail_enabled \
              cbs_elb_logging_enabled \
              cbs_s3_satellite_bucket_rule \
              cbs_s3_bucket_logging_enabled \
              cbs_wafv2_logs_rule \
              cbs_vpc_flow_logging_enabled)
          RULES=$(echo "$RULE_STATUS" | jq -r ".ComplianceByConfigRules")
          echo "::set-output name=rules::$RULES"

      - name: Post non-compliant slack message
        if: steps.compliance.outputs.rules != '[]'
        run: |
          json='{"text": ":red: `${{ matrix.account }}` ConfigRules are not compliant"}'
          curl -X POST -H 'Content-type: application/json' --data "$json" ${{ env.SLACK_WEBHOOK }}
